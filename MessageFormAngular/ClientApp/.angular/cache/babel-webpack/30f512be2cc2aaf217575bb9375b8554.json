{"ast":null,"code":"import _classCallCheck from \"D:/YandexDisk/Projects/NetCore/MessageFormAngular/MessageFormAngular/ClientApp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:/YandexDisk/Projects/NetCore/MessageFormAngular/MessageFormAngular/ClientApp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport var DataService = /*#__PURE__*/(function () {\n  var DataService = /*#__PURE__*/function () {\n    function DataService(http) {\n      _classCallCheck(this, DataService);\n\n      this.http = http;\n      this.contactUrl = \"/api/contact\";\n      this.messageUrl = \"/api/message\";\n      this.topicUrl = \"/api/topic\";\n    }\n\n    _createClass(DataService, [{\n      key: \"getContacts\",\n      value: function getContacts() {\n        return this.http.get(this.contactUrl);\n      }\n    }, {\n      key: \"getContact\",\n      value: function getContact(id) {\n        return this.http.get(this.contactUrl + '/' + id);\n      }\n    }, {\n      key: \"createContact\",\n      value: function createContact(contact) {\n        return this.http.post(this.contactUrl, contact);\n      }\n    }, {\n      key: \"updateContact\",\n      value: function updateContact(contact) {\n        return this.http.put(this.contactUrl, contact);\n      }\n    }, {\n      key: \"deleteContact\",\n      value: function deleteContact(id) {\n        return this.http.delete(this.contactUrl + '/' + id);\n      }\n    }, {\n      key: \"getMessages\",\n      value: function getMessages() {\n        return this.http.get(this.messageUrl);\n      }\n    }, {\n      key: \"getMessage\",\n      value: function getMessage(id) {\n        return this.http.get(this.messageUrl + '/' + id);\n      }\n    }, {\n      key: \"createMessage\",\n      value: function createMessage(message) {\n        return this.http.post(this.messageUrl, message);\n      }\n    }, {\n      key: \"updateMessage\",\n      value: function updateMessage(message) {\n        return this.http.put(this.messageUrl, message);\n      }\n    }, {\n      key: \"deleteMessage\",\n      value: function deleteMessage(id) {\n        return this.http.delete(this.messageUrl + '/');\n      }\n    }, {\n      key: \"getTopics\",\n      value: function getTopics() {\n        return this.http.get(this.topicUrl);\n      }\n    }, {\n      key: \"getTopic\",\n      value: function getTopic(id) {\n        return this.http.get(this.topicUrl + '/' + id);\n      }\n    }]);\n\n    return DataService;\n  }();\n\n  DataService.ɵfac = function DataService_Factory(t) {\n    return new (t || DataService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  DataService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DataService,\n    factory: DataService.ɵfac\n  });\n  return DataService;\n})();","map":null,"metadata":{},"sourceType":"module"}